<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="domain_8c" kind="file" language="C++">
    <compoundname>domain.c</compoundname>
    <includes refid="domain_8h" local="yes">domain.h</includes>
    <includes refid="domain__p_8h" local="yes">domain_p.h</includes>
    <includes refid="common_8h" local="yes">common.h</includes>
    <includes refid="connection_8h" local="yes">connection.h</includes>
    <includes refid="connection__state__machine_8h" local="yes">connection_state_machine.h</includes>
    <includes refid="entry_8h" local="yes">entry.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">talloc.h</includes>
    <includes local="no">libconfig.h</includes>
    <incdepgraph>
      <node id="8">
        <label>common.h</label>
        <link refid="common_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>connection.h</label>
        <link refid="connection_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>connection_state_machine.h</label>
        <link refid="connection__state__machine_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/domain.c</label>
        <link refid="domain_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>domain.h</label>
        <link refid="domain_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>domain_p.h</label>
        <link refid="domain__p_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>entry.h</label>
        <link refid="entry_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>helper_p.h</label>
        <link refid="helper__p_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>request_queue.h</label>
        <link refid="request__queue_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ldap.h</label>
      </node>
      <node id="15">
        <label>libconfig.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="14">
        <label>stdio.h</label>
      </node>
      <node id="3">
        <label>talloc.h</label>
      </node>
      <node id="5">
        <label>verto.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="domain_8c_1afff76e45460c7a235061f5ee0b43649c" prot="public" static="no">
        <name>get_config_required_string</name>
        <param><defname>name</defname></param>
        <param><defname>out</defname></param>
        <initializer>    if (config_lookup_string(&amp;cfg, name, &amp;out)) \
    { \
        <ref refid="common_8c_1a3a93af25b0bc8dbf7b01e825fa683ad4" kindref="member">ld_info</ref>(&quot;%s: %s\n\n&quot;, name, out); \
    } \
    else \
    { \
        <ref refid="common_8c_1a510c422451a8060e367f6d8a5e669b44" kindref="member">ld_error</ref>(&quot;No &apos;%s&apos; setting in configuration file.\n&quot;, name); \
        config_destroy(&amp;cfg); \
        return NULL; \
    } \</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/domain.c" line="36" column="9" bodyfile="src/domain.c" bodystart="36" bodyend="47"/>
      </memberdef>
      <memberdef kind="define" id="domain_8c_1a34faf350e60811b368f911267e228784" prot="public" static="no">
        <name>get_config_optional_setting</name>
        <param><defname>name</defname></param>
        <param><defname>out</defname></param>
        <param><defname>setting_function</defname></param>
        <param><defname>specifier</defname></param>
        <initializer>    if ((setting_function)(&amp;cfg, name, &amp;out)) \
    { \
        <ref refid="common_8c_1a3a93af25b0bc8dbf7b01e825fa683ad4" kindref="member">ld_info</ref>(&quot;%s: &quot; specifier &quot;\n\n&quot;, name, out); \
    } \
    else \
    { \
        <ref refid="common_8c_1a3a93af25b0bc8dbf7b01e825fa683ad4" kindref="member">ld_info</ref>(&quot;No &apos;%s&apos; setting in configuration file.\n&quot;, name); \
    } \</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/domain.c" line="48" column="9" bodyfile="src/domain.c" bodystart="48" bodyend="57"/>
      </memberdef>
      <memberdef kind="define" id="domain_8c_1a89c68b6ae7fd1d3eebe81e4f3d02f8a9" prot="public" static="no">
        <name>get_config_optional_string</name>
        <param><defname>name</defname></param>
        <param><defname>out</defname></param>
        <initializer>    <ref refid="domain_8c_1a34faf350e60811b368f911267e228784" kindref="member">get_config_optional_setting</ref>(name, out, config_lookup_string, &quot;%s&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/domain.c" line="58" column="9" bodyfile="src/domain.c" bodystart="58" bodyend="59"/>
      </memberdef>
      <memberdef kind="define" id="domain_8c_1ad838d7abb32496a557869761cd0f2ad9" prot="public" static="no">
        <name>get_config_optional_int</name>
        <param><defname>name</defname></param>
        <param><defname>out</defname></param>
        <initializer>    <ref refid="domain_8c_1a34faf350e60811b368f911267e228784" kindref="member">get_config_optional_setting</ref>(name, out, config_lookup_int, &quot;%d&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/domain.c" line="61" column="9" bodyfile="src/domain.c" bodystart="61" bodyend="62"/>
      </memberdef>
      <memberdef kind="define" id="domain_8c_1aea6cd71598d2af3016e0cbeecfec3e68" prot="public" static="no">
        <name>get_config_optional_bool</name>
        <param><defname>name</defname></param>
        <param><defname>out</defname></param>
        <initializer>    if (config_lookup_bool(&amp;cfg, name, (int*)&amp;out)) \
    { \
        <ref refid="common_8c_1a3a93af25b0bc8dbf7b01e825fa683ad4" kindref="member">ld_info</ref>(&quot;%s: %s\n\n&quot;, name, out ? &quot;true&quot; : &quot;false&quot;); \
    } \
    else \
    { \
        <ref refid="common_8c_1a3a93af25b0bc8dbf7b01e825fa683ad4" kindref="member">ld_info</ref>(&quot;No &apos;%s&apos; setting in configuration file.\n&quot;, name); \
    } \</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/domain.c" line="64" column="9" bodyfile="src/domain.c" bodystart="64" bodyend="73"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="domain_8c_1a09fd7ac2df6285d40d68e6f121335191" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int CONNECTION_UPDATE_INTERVAL</definition>
        <argsstring></argsstring>
        <name>CONNECTION_UPDATE_INTERVAL</name>
        <initializer>= 1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/domain.c" line="34" column="18" bodyfile="src/domain.c" bodystart="34" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="domain_8c_1ac168f7fa5da5dbe6c73355ebfaa9eaeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="domain_8h_1a39784904a5576d0e7510c0dd7c4511f7" kindref="member">ld_config_t</ref> *</type>
        <definition>ld_config_t * ld_load_config</definition>
        <argsstring>(TALLOC_CTX *ctx, const char *filename)</argsstring>
        <name>ld_load_config</name>
        <param>
          <type>TALLOC_CTX *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/domain.c" line="74" column="13" bodyfile="src/domain.c" bodystart="74" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="domain_8c_1ae7a24af23b4e7cabdf7d252280e76eac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="domain_8h_1a39784904a5576d0e7510c0dd7c4511f7" kindref="member">ld_config_t</ref> *</type>
        <definition>ld_config_t * ld_create_config</definition>
        <argsstring>(TALLOC_CTX *talloc_ctx, char *host, int port, int protocol_version, char *base_dn, char *username, char *password, bool simple_bind, bool use_tls, bool use_sasl, bool use_anon, int timeout, char *cacertfile, char *certfile, char *keyfile)</argsstring>
        <name>ld_create_config</name>
        <param>
          <type>TALLOC_CTX *</type>
          <declname>talloc_ctx</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <param>
          <type>int</type>
          <declname>protocol_version</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>base_dn</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>username</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>password</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>simple_bind</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_tls</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_sasl</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_anon</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>cacertfile</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>certfile</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>keyfile</declname>
        </param>
        <briefdescription>
<para>ld_create_config Fills fields of configuration structure. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Hostname of LDAP server. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">protocol_version</parametername>
</parameternamelist>
<parameterdescription>
<para>LDAP protocol version. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">base_dn</parametername>
</parameternamelist>
<parameterdescription>
<para>DN to use during bind. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">username</parametername>
</parameternamelist>
<parameterdescription>
<para>Username to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">password</parametername>
</parameternamelist>
<parameterdescription>
<para>User password </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">simple_bind</parametername>
</parameternamelist>
<parameterdescription>
<para>If we going to perform simple bind instead of interactive bind. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">use_tls</parametername>
</parameternamelist>
<parameterdescription>
<para>If we going to use TLS encryption. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">use_sasl</parametername>
</parameternamelist>
<parameterdescription>
<para>If we going to enable SASL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">use_anon</parametername>
</parameternamelist>
<parameterdescription>
<para>If we going to enable anonymous logon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Timeout to read and write operations. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cacertfile</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">certfile</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">keyfile</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>NULL on failure.</para>
</listitem><listitem><para>config_t* on success. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/domain.c" line="243" column="13" bodyfile="src/domain.c" bodystart="243" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="domain_8c_1a280fdac153f64e5756c3936771e36c5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ld_init</definition>
        <argsstring>(LDHandle **handle, const ld_config_t *config)</argsstring>
        <name>ld_init</name>
        <param>
          <type><ref refid="connection_8h_1aee5bc18c3dd6ebf54740b4bb4284db84" kindref="member">LDHandle</ref> **</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const <ref refid="domain_8h_1a39784904a5576d0e7510c0dd7c4511f7" kindref="member">ld_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>ld_init Initializes the library allowing us to performing various operations. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to libdomain session handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration of the connections. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/domain.c" line="345" column="6" bodyfile="src/domain.c" bodystart="345" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="domain_8c_1a15040f5c5b7915f61d5fd78159ad80d0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void connection_update</definition>
        <argsstring>(verto_ctx *ctx, verto_ev *ev)</argsstring>
        <name>connection_update</name>
        <param>
          <type>verto_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>verto_ev *</type>
          <declname>ev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/domain.c" line="442" column="13" bodyfile="src/domain.c" bodystart="442" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="domain_8c_1a725154d332b43ba3725a58abc04e532c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ld_install_default_handlers</definition>
        <argsstring>(LDHandle *handle)</argsstring>
        <name>ld_install_default_handlers</name>
        <param>
          <type><ref refid="connection_8h_1aee5bc18c3dd6ebf54740b4bb4284db84" kindref="member">LDHandle</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>ld_install_default_handlers Installs default handlers to control connection. This method must be called before performing any operations. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to libdomain session handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/domain.c" line="463" column="6" bodyfile="src/domain.c" bodystart="463" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="domain_8c_1a1e834e231c105aa4d3930776e9eb53d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ld_install_handler</definition>
        <argsstring>(LDHandle *handle, verto_callback *callback, time_t interval)</argsstring>
        <name>ld_install_handler</name>
        <param>
          <type><ref refid="connection_8h_1aee5bc18c3dd6ebf54740b4bb4284db84" kindref="member">LDHandle</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>verto_callback *</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>time_t</type>
          <declname>interval</declname>
        </param>
        <briefdescription>
<para>ld_install_handler If we need to install custom error callback this method allows us to do so. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to libdomain session handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/domain.c" line="480" column="6" bodyfile="src/domain.c" bodystart="480" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="domain_8c_1abec4bd908b0862aad78943e378a11a2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ld_exec</definition>
        <argsstring>(LDHandle *handle)</argsstring>
        <name>ld_exec</name>
        <param>
          <type><ref refid="connection_8h_1aee5bc18c3dd6ebf54740b4bb4284db84" kindref="member">LDHandle</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>ld_exec Start main event cycle. You don&apos;t need to call this function if there is already existing event loop e.g. inside of Qt application. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to libdomain session handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/domain.c" line="497" column="6" bodyfile="src/domain.c" bodystart="497" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="domain_8c_1a48da1827fe0a601984ca073e73c29676" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ld_exec_once</definition>
        <argsstring>(LDHandle *handle)</argsstring>
        <name>ld_exec_once</name>
        <param>
          <type><ref refid="connection_8h_1aee5bc18c3dd6ebf54740b4bb4284db84" kindref="member">LDHandle</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>ld_exec_once Cycles through event list once. May block. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to libdomain session handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/domain.c" line="512" column="6" bodyfile="src/domain.c" bodystart="512" bodyend="521"/>
      </memberdef>
      <memberdef kind="function" id="domain_8c_1a9b62028587d99192d36cc1bdcb047f36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ld_free</definition>
        <argsstring>(LDHandle *handle)</argsstring>
        <name>ld_free</name>
        <param>
          <type><ref refid="connection_8h_1aee5bc18c3dd6ebf54740b4bb4284db84" kindref="member">LDHandle</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>ld_free Free library handle and resources associated with it. After freeing the handle you can no longer perform any operations. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to libdomain session handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/domain.c" line="528" column="6" bodyfile="src/domain.c" bodystart="528" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="domain_8c_1a722d3c7bfd89fa24fd5d0c9157627658" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LDAPMod **</type>
        <definition>static LDAPMod ** fill_attributes</definition>
        <argsstring>(LDAPAttribute_t **entry_attrs, TALLOC_CTX *talloc_ctx, int mod_op)</argsstring>
        <name>fill_attributes</name>
        <param>
          <type><ref refid="domain_8h_1a133ec15039a9fdf8b0f9f5d7e25d1742" kindref="member">LDAPAttribute_t</ref> **</type>
          <declname>entry_attrs</declname>
        </param>
        <param>
          <type>TALLOC_CTX *</type>
          <declname>talloc_ctx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mod_op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/domain.c" line="541" column="17" bodyfile="src/domain.c" bodystart="541" bodyend="591"/>
      </memberdef>
      <memberdef kind="function" id="domain_8c_1ac5880d842d821bd395fe491ef5e0301c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="common_8h_1a0eb30976238f6076cad4dfc7ab28121d" kindref="member">OperationReturnCode</ref></type>
        <definition>enum OperationReturnCode ld_add_entry</definition>
        <argsstring>(LDHandle *handle, const char *name, const char *parent, const char *prefix, LDAPAttribute_t **entry_attrs)</argsstring>
        <name>ld_add_entry</name>
        <param>
          <type><ref refid="connection_8h_1aee5bc18c3dd6ebf54740b4bb4284db84" kindref="member">LDHandle</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type><ref refid="domain_8h_1a133ec15039a9fdf8b0f9f5d7e25d1742" kindref="member">LDAPAttribute_t</ref> **</type>
          <declname>entry_attrs</declname>
        </param>
        <briefdescription>
<para>ld_add_entry Creates the entry. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to libdomain session handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the entry. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parent</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent container that holds the entry. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">entry_attrs</parametername>
</parameternamelist>
<parameterdescription>
<para>List of the attributes to create entry with. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>RETURN_CODE_SUCCESS on success.</para>
</listitem><listitem><para>RETURN_CODE_FAILURE on failure. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/domain.c" line="603" column="25" bodyfile="src/domain.c" bodystart="603" bodyend="640"/>
      </memberdef>
      <memberdef kind="function" id="domain_8c_1a98503ce1e889b53e3c5e804afc3cabe6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="common_8h_1a0eb30976238f6076cad4dfc7ab28121d" kindref="member">OperationReturnCode</ref></type>
        <definition>enum OperationReturnCode ld_del_entry</definition>
        <argsstring>(LDHandle *handle, const char *name, const char *parent, const char *prefix)</argsstring>
        <name>ld_del_entry</name>
        <param>
          <type><ref refid="connection_8h_1aee5bc18c3dd6ebf54740b4bb4284db84" kindref="member">LDHandle</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <briefdescription>
<para>ld_del_entry Deletes entry. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to libdomain session handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the entry. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parent</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent container that holds the entry. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>Prefix of the entry. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>RETURN_CODE_SUCCESS on success.</para>
</listitem><listitem><para>RETURN_CODE_FAILURE on failure. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/domain.c" line="652" column="25" bodyfile="src/domain.c" bodystart="652" bodyend="684"/>
      </memberdef>
      <memberdef kind="function" id="domain_8c_1a7537183d743e55e8b055d2db8de068bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="common_8h_1a0eb30976238f6076cad4dfc7ab28121d" kindref="member">OperationReturnCode</ref></type>
        <definition>enum OperationReturnCode ld_mod_entry</definition>
        <argsstring>(LDHandle *handle, const char *name, const char *parent, const char *prefix, LDAPAttribute_t **entry_attrs)</argsstring>
        <name>ld_mod_entry</name>
        <param>
          <type><ref refid="connection_8h_1aee5bc18c3dd6ebf54740b4bb4284db84" kindref="member">LDHandle</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type><ref refid="domain_8h_1a133ec15039a9fdf8b0f9f5d7e25d1742" kindref="member">LDAPAttribute_t</ref> **</type>
          <declname>entry_attrs</declname>
        </param>
        <briefdescription>
<para>ld_mod_entry Modifies the entry. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to libdomain session handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the entry. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parent</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent container that holds the entry. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">entry_attrs</parametername>
</parameternamelist>
<parameterdescription>
<para>List of the attributes to modify. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>RETURN_CODE_SUCCESS on success.</para>
</listitem><listitem><para>RETURN_CODE_FAILURE on failure. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/domain.c" line="696" column="25" bodyfile="src/domain.c" bodystart="696" bodyend="733"/>
      </memberdef>
      <memberdef kind="function" id="domain_8c_1a714b3eca566ef227c0542b47de8d0f80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="common_8h_1a0eb30976238f6076cad4dfc7ab28121d" kindref="member">OperationReturnCode</ref></type>
        <definition>enum OperationReturnCode ld_rename_entry</definition>
        <argsstring>(LDHandle *handle, const char *old_name, const char *new_name, const char *parent, const char *prefix)</argsstring>
        <name>ld_rename_entry</name>
        <param>
          <type><ref refid="connection_8h_1aee5bc18c3dd6ebf54740b4bb4284db84" kindref="member">LDHandle</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>old_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>new_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <briefdescription>
<para>ld_rename_entry Renames the entry. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to libdomain session handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">old_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Old name of the entry. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">new_name</parametername>
</parameternamelist>
<parameterdescription>
<para>New name of the entry. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parent</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent container that holds the entry. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>Prefix for entry type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>RETURN_CODE_SUCCESS on success.</para>
</listitem><listitem><para>RETURN_CODE_FAILURE on failure. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/domain.c" line="746" column="25" bodyfile="src/domain.c" bodystart="746" bodyend="784"/>
      </memberdef>
      <memberdef kind="function" id="domain_8c_1a1e73802f485469a4f3aaee8b41b1ee34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ld_install_error_handler</definition>
        <argsstring>(LDHandle *handle, error_callback_fn callback)</argsstring>
        <name>ld_install_error_handler</name>
        <param>
          <type><ref refid="connection_8h_1aee5bc18c3dd6ebf54740b4bb4284db84" kindref="member">LDHandle</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="domain_8h_1a4887834969c328535d8b45775f581afc" kindref="member">error_callback_fn</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>ld_install_error_handler Allows us to install custom error handle for our application. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to libdomain session handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback to call. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/domain.c" line="791" column="6" bodyfile="src/domain.c" bodystart="791" bodyend="806"/>
      </memberdef>
      <memberdef kind="function" id="domain_8c_1abf1a1199723627800bc0c86151aa0ff3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="common_8h_1a0eb30976238f6076cad4dfc7ab28121d" kindref="member">OperationReturnCode</ref></type>
        <definition>enum OperationReturnCode ld_mod_entry_attrs</definition>
        <argsstring>(LDHandle *handle, const char *name, const char *parent, const char *prefix, LDAPAttribute_t **entry_attrs, int opcode)</argsstring>
        <name>ld_mod_entry_attrs</name>
        <param>
          <type><ref refid="connection_8h_1aee5bc18c3dd6ebf54740b4bb4284db84" kindref="member">LDHandle</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type><ref refid="domain_8h_1a133ec15039a9fdf8b0f9f5d7e25d1742" kindref="member">LDAPAttribute_t</ref> **</type>
          <declname>entry_attrs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>opcode</declname>
        </param>
        <briefdescription>
<para>ld_mod_entry_attrs Modifies list of attributes using supplied operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to libdomain session handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the entry. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parent</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent container that holds the entry. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>Prefix of the entry. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">entry_attrs</parametername>
</parameternamelist>
<parameterdescription>
<para>List of the attributes to modify. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">opcode</parametername>
</parameternamelist>
<parameterdescription>
<para>Code of operation e.g. LDAP_MOD_REPLACE. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>RETURN_CODE_SUCCESS on success.</para>
</listitem><listitem><para>RETURN_CODE_FAILURE on failure. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/domain.c" line="820" column="25" bodyfile="src/domain.c" bodystart="820" bodyend="864"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/domain.c"/>
  </compounddef>
</doxygen>
