<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="connection__state__machine_8c" kind="file" language="C++">
    <compoundname>connection_state_machine.c</compoundname>
    <includes refid="connection__state__machine_8h" local="yes">connection_state_machine.h</includes>
    <includes refid="directory_8h" local="yes">directory.h</includes>
    <includes refid="domain_8h" local="yes">domain.h</includes>
    <includes refid="domain__p_8h" local="yes">domain_p.h</includes>
    <includes refid="schema_8h" local="yes">schema.h</includes>
    <incdepgraph>
      <node id="7">
        <label>common.h</label>
        <link refid="common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>connection.h</label>
        <link refid="connection_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/connection_state_machine.c</label>
        <link refid="connection__state__machine_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>connection_state_machine.h</label>
        <link refid="connection__state__machine_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>directory.h</label>
        <link refid="directory_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>domain.h</label>
        <link refid="domain_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>domain_p.h</label>
        <link refid="domain__p_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>helper_p.h</label>
        <link refid="helper__p_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>request_queue.h</label>
        <link refid="request__queue_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>schema.h</label>
        <link refid="schema_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ldap.h</label>
      </node>
      <node id="15">
        <label>ldap_schema.h</label>
      </node>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="8">
        <label>talloc.h</label>
      </node>
      <node id="6">
        <label>verto.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structcsm__state__value__t" prot="public">csm_state_value_t</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="connection__state__machine_8c_1a3d7b61c23771d76af33538b7fdeaca91" prot="public" static="no">
        <name>number_of_elements</name>
        <param><defname>x</defname></param>
        <initializer>(sizeof(x) / sizeof((x)[0]))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/connection_state_machine.c" line="27" column="9" bodyfile="src/connection_state_machine.c" bodystart="27" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="connection__state__machine_8c_1ade6c7867e6bc3a0f9a6319977ba18983" prot="public" static="no">
        <type>struct <ref refid="structcsm__state__value__t" kindref="compound">csm_state_value_t</ref></type>
        <definition>typedef struct csm_state_value_t csm_state_value_t</definition>
        <argsstring></argsstring>
        <name>csm_state_value_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/connection_state_machine.c" line="33" column="19"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="connection__state__machine_8c_1a777a0aded5f1dcabc432c59a4f4ef7f6" prot="public" static="no" mutable="no">
        <type>const <ref refid="structcsm__state__value__t" kindref="compound">csm_state_value_t</ref></type>
        <definition>const csm_state_value_t state_strings[]</definition>
        <argsstring>[]</argsstring>
        <name>state_strings</name>
        <initializer>=
{
    { <ref refid="connection__state__machine_8h_1aaa58f89d042671d6523b67f2a8310b1cabd2d9b377dfbaeceeffa44d1c2bf001d" kindref="member">LDAP_CONNECTION_STATE_INIT</ref>, &quot;LDAP_CONNECTION_STATE_INIT&quot; },
    { <ref refid="connection__state__machine_8h_1aaa58f89d042671d6523b67f2a8310b1ca8a9ab046076d6b160bfda4b5889d8d7c" kindref="member">LDAP_CONNECTION_STATE_TLS_NEGOTIATION</ref>, &quot;LDAP_CONNECTION_STATE_TLS_NEGOTIATION&quot; },
    { <ref refid="connection__state__machine_8h_1aaa58f89d042671d6523b67f2a8310b1ca677eb1388b12a255b7cc3e1be75bf379" kindref="member">LDAP_CONNECTION_STATE_TRANSPORT_READY</ref>, &quot;LDAP_CONNECTION_STATE_TRANSPORT_READY&quot; },
    { <ref refid="connection__state__machine_8h_1aaa58f89d042671d6523b67f2a8310b1cab970e1d0611ffc209bbcadb7ad34adfa" kindref="member">LDAP_CONNECTION_STATE_BIND_IN_PROGRESS</ref>, &quot;LDAP_CONNECTION_STATE_BIND_IN_PROGRESS&quot; },
    { <ref refid="connection__state__machine_8h_1aaa58f89d042671d6523b67f2a8310b1ca38f196df59f3742de7dac19e79baaa9d" kindref="member">LDAP_CONNECTION_STATE_BOUND</ref>, &quot;LDAP_CONNECTION_STATE_BOUND&quot; },
    { <ref refid="connection__state__machine_8h_1aaa58f89d042671d6523b67f2a8310b1ca5868636cc8400842c8b780959c5f780a" kindref="member">LDAP_CONNECTION_STATE_DETECT_DIRECTORY</ref>, &quot;LDAP_CONNECTION_STATE_DETECT_DIRECTORY&quot; },
    { <ref refid="connection__state__machine_8h_1aaa58f89d042671d6523b67f2a8310b1ca21b129512c26c42a78930885fcb30ef1" kindref="member">LDAP_CONNECTION_STATE_RUN</ref>, &quot;LDAP_CONNECTION_STATE_RUN&quot; },
    { <ref refid="connection__state__machine_8h_1aaa58f89d042671d6523b67f2a8310b1ca199af26e720854d8ff49745fcf7043f5" kindref="member">LDAP_CONNECTION_STATE_ERROR</ref>, &quot;LDAP_CONNECTION_STATE_ERROR&quot; },
    { <ref refid="connection__state__machine_8h_1aaa58f89d042671d6523b67f2a8310b1caac6d490849c5ac32b5ae6e504791b76b" kindref="member">LDAP_CONNECTION_STATE_REQUEST_SCHEMA</ref>, &quot;LDAP_CONNECTION_STATE_LOAD_SCHEMA&quot; },
    { <ref refid="connection__state__machine_8h_1aaa58f89d042671d6523b67f2a8310b1ca152301dbe3a384a7cee1c16f8deaa9e8" kindref="member">LDAP_CONNECTION_STATE_CHECK_SCHEMA</ref>, &quot;LDAP_CONNECTION_STATE_SCHEMA_READY&quot; },
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/connection_state_machine.c" line="35" column="25" bodyfile="src/connection_state_machine.c" bodystart="35" bodyend="47"/>
      </memberdef>
      <memberdef kind="variable" id="connection__state__machine_8c_1adf6c2addc03b76e7938c7648b4638020" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int state_strings_size</definition>
        <argsstring></argsstring>
        <name>state_strings_size</name>
        <initializer>= <ref refid="connection_8c_1a3d7b61c23771d76af33538b7fdeaca91" kindref="member">number_of_elements</ref>(<ref refid="connection__state__machine_8c_1a777a0aded5f1dcabc432c59a4f4ef7f6" kindref="member">state_strings</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/connection_state_machine.c" line="48" column="11" bodyfile="src/connection_state_machine.c" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="connection__state__machine_8c_1a4af9dcda9b1499763f5cc57285127a1e" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int MAX_RECONNECT_ATTEMPTS</definition>
        <argsstring></argsstring>
        <name>MAX_RECONNECT_ATTEMPTS</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/connection_state_machine.c" line="50" column="18" bodyfile="src/connection_state_machine.c" bodystart="50" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="connection__state__machine_8c_1a0cb7d5de06f08a57eefee074aa982cf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * csm_state2str</definition>
        <argsstring>(int state)</argsstring>
        <name>csm_state2str</name>
        <param>
          <type>int</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/connection_state_machine.c" line="52" column="12" bodyfile="src/connection_state_machine.c" bodystart="52" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="connection__state__machine_8c_1a13b43041e4136b7f24c03496698245f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="common_8h_1a0eb30976238f6076cad4dfc7ab28121d" kindref="member">OperationReturnCode</ref></type>
        <definition>enum OperationReturnCode csm_init</definition>
        <argsstring>(struct state_machine_ctx_t *ctx, struct ldap_connection_ctx_t *connection)</argsstring>
        <name>csm_init</name>
        <param>
          <type>struct <ref refid="structstate__machine__ctx__t" kindref="compound">state_machine_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>struct <ref refid="structldap__connection__ctx__t" kindref="compound">ldap_connection_ctx_t</ref> *</type>
          <declname>connection</declname>
        </param>
        <briefdescription>
<para>csm_init Initializes state machine, sets machine state to LDAP_CONNECTION_STATE_INIT. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>state machine to initialize </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">connection</parametername>
</parameternamelist>
<parameterdescription>
<para>connection to use </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RETURN_CODE_SUCCESS. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/connection_state_machine.c" line="71" column="25" bodyfile="src/connection_state_machine.c" bodystart="71" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="connection__state__machine_8c_1ac4b4e9a455c957219a565f1d4780fb22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="common_8h_1a0eb30976238f6076cad4dfc7ab28121d" kindref="member">OperationReturnCode</ref></type>
        <definition>enum OperationReturnCode csm_next_state</definition>
        <argsstring>(struct state_machine_ctx_t *ctx)</argsstring>
        <name>csm_next_state</name>
        <param>
          <type>struct <ref refid="structstate__machine__ctx__t" kindref="compound">state_machine_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>csm_next_state Advances state based on a current machine state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>state machine to use </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>RETURN_CODE_SUCCESS on success.</para>
</listitem><listitem><para>RETURN_CODE_OPERATION_IN_PROGRESS is operation is still running.</para>
</listitem><listitem><para>RETURN_CODE_FAILURE on failure. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/connection_state_machine.c" line="87" column="25" bodyfile="src/connection_state_machine.c" bodystart="87" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="connection__state__machine_8c_1a58502c0e4c771c97c3e748e9b1e8dab5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="common_8h_1a0eb30976238f6076cad4dfc7ab28121d" kindref="member">OperationReturnCode</ref></type>
        <definition>enum OperationReturnCode csm_set_state</definition>
        <argsstring>(struct state_machine_ctx_t *ctx, enum LdapConnectionState state)</argsstring>
        <name>csm_set_state</name>
        <param>
          <type>struct <ref refid="structstate__machine__ctx__t" kindref="compound">state_machine_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>enum <ref refid="connection__state__machine_8h_1aaa58f89d042671d6523b67f2a8310b1c" kindref="member">LdapConnectionState</ref></type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>csm_set_state Sets new state, prints transition between states. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>state machine to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">state</parametername>
</parameternamelist>
<parameterdescription>
<para>state to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RETURN_CODE_SUCCESS. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/connection_state_machine.c" line="213" column="25" bodyfile="src/connection_state_machine.c" bodystart="213" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="connection__state__machine_8c_1ad426401cfcfe4e60b0a4816c17bdc85c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool csm_is_in_state</definition>
        <argsstring>(state_machine_ctx_t *ctx, enum LdapConnectionState state)</argsstring>
        <name>csm_is_in_state</name>
        <param>
          <type><ref refid="structstate__machine__ctx__t" kindref="compound">state_machine_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>enum <ref refid="connection__state__machine_8h_1aaa58f89d042671d6523b67f2a8310b1c" kindref="member">LdapConnectionState</ref></type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>csm_is_in_state Checks if state macheine is in desired state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>state machine to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">state</parametername>
</parameternamelist>
<parameterdescription>
<para>state to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>true - if machine current state matches <itemizedlist>
<listitem><para>{state}</para>
</listitem>
</itemizedlist>
</para>
</listitem><listitem><para>false - if not </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/connection_state_machine.c" line="230" column="6" bodyfile="src/connection_state_machine.c" bodystart="230" bodyend="233"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/connection_state_machine.c"/>
  </compounddef>
</doxygen>
