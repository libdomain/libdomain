name: Test on Alt-Linux

on:
  workflow_call:
    inputs:
      os:
        description: "OS"
        type: string
        required: true
      architecture:
        description: "OS Architecture"
        type: string
        required: true
      environment:
        description: "Test Environment"
        type: string
        required: true

  workflow_dispatch:
    inputs:
      os:
        description: "OS"
        type: choice
        options:
          - alt:sisyphus
          - alt:p10
          - alt:p9
        required: false
        default: "alt:sisyphus"
      architecture:
        description: "OS Architecture"
        type: choice
        options:
          - i386
          - amd64
        required: false
        default: "amd64"
      environment:
        description: "Test Environment"
        type: choice
        options:
          - openldap
          - samba
        required: false
        default: "openldap"

jobs:
  build:
    runs-on: ubuntu-latest
    name: build

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - run: mkdir -p /tmp/certs

      - run: export SCRIPT_PATH=`pwd` && cd /tmp/certs && bash "${SCRIPT_PATH}/script/generate_cert.sh" `pwd` && docker volume create --driver local --opt type=none --opt device=`pwd` --opt o=bind cert-volume

      - run: docker volume create --driver local --opt type=none --opt device=`pwd` --opt o=bind data-volume

      - run: cd tests && docker compose -f docker-compose.${{ inputs.environment }}.yml -f docker-compose.yml build --build-arg USER_ID=$(id -u) --build-arg GROUP_ID=$(id -g) --build-arg DISTR=${{ inputs.os }} --build-arg ARCH=${{ inputs.architecture }}

      - run: cd tests && docker compose -f docker-compose.${{ inputs.environment }}.yml -f docker-compose.yml up --abort-on-container-exit --attach-dependencies

